import os
import sys
import math

def HammingDistance(String1, String2):
    count = 0
    for i in range (len(String1)):
        if String1[i] != String2[i]:
            count += 1
    return count

def DistanceBetweenPatternAndStrings(Pattern, Dna):
    k = len(Pattern)
    distance = 0
    for string in Dna:
        tmp = float('inf')
        for i in range (len(Dna[0]) - len(Pattern) + 1):
            substr = string[i:i+k]
            if HammingDistance(Pattern, substr) < tmp:
               tmp = HammingDistance(Pattern, substr)
        distance += tmp
    return distance
    
            
Pattern = "CGGAATC"
Dna = "GCACCAGCGCCAAGTTCACTCGTAGCCAGCGGTAACCTTTGACCTCGGTTGGTCGCCTCAGACCCGGGCCACGGATTTTGCATTTCGAAGGCTTT TATAGCCCCTAGCAGCCCTCGCGGGGCCCAGCTGTTGGCAAGCTGATGGATAGCCTCTTCCGTCATAGCGAAGTTGGGTAAAGACATTAATAACC GGTTCGTTTGTCAAGCGTTCTGAATTTTGCAAACAACTCCCTTAGGCGGACGTGAGTTATTCAGCTAAACAAGCTGGGAACGGATCGTTTCCTTC CCTGTCCATATAGCAGGTCCCTGAGAGGCAGAGAAATAGTCGCGATCCTCGGGAGGAAGTGAAACTTCCATATCCCGAGTCCCGTGAAGAGTGAA GCGATGTCCAGATTTCGCGGTGTCCAGTGTTCGAACTAAGGACCACTGAATCGTATGATTTCGCGAATGCATATGCATACAGTGATAGGATTTAA TGTAAGGTCCAAGGTCCCAAGTTACCCGGCCTGACAGCGGCCTATTATAGAACGTCCGTGGAGTCCATACTTTAGTCGCAGTAGCAGGAACATTG CCTTGCTTAATCCCTCACCATCATAGCTGGTAGTTTGTGGGCATCACAACGCGTGGATGGCAGATCGCCCACCCCAATCGAGGACTTTCGAAATT ATAACTGGCAGCGGCCATAGGGCGATACTAGAACTTGTTGATTGTATCGCACCTTCCCACGGTATTCAGATCGCTCGCAGTGCACGTTCACGGGT AAGCAGGAATCGGTTATGCACGCGTACGTCCCCGGCATGCATCCAGGTTCAGTCTGAGTGGAATGCGTCAGGGTTTCATGCGTGGGGGTTTACGA CATTCTTTTCCGCCCCCGTCAACCCCAAGTGAAAGGGTTGTGACAACGAAAGTGAAGTCATTTAGTCCCTGACACATTTAAAGTAATGCCTAACA TTTGCTTACGTTCTTACGGAATATGTATGGGGGAAAGTAACACGGGTGATCAAGTCGCGCAGCCTACTCATTTAGCACCTGCTGCCTGCGAATTA CGACAGGTTGCCACCGCCCAAATTCCGTGACTGTGCCTAATTACCCGTCTAGGCCAGGCGGGGAGTGCACTGTTCACGCGTGGTAGCAACTTCAG GCAACAGTGTACGTCTTGAAGTGCATTGCAGCGCCAGTCATGACAGAAGACCAAATCAGATTGACGTACAAGTATTACCGGTGGGCTAAGAAATT TAACTAGCTAGTACATGAAATAAGCCCCGCGTTTTTGCCCAAGGAAGCCTAGAGTCATTTTTAATTATGACAGAGCACAGCACAAGTGACTGTCT TTCCCCATACCATCGTCCTGCACGGCTGCACGATCTAAGTTATTTCGCCCCGATGTTAAGTCATCTAGTCCATCCACAACCCTGTTGTCCGGGGT TTCACACTGAGCGCCGACGGTATTTGGAGGCACATGGTCACTAACATGCTCCTCGCTAAGTAGAACAGTCACAACAGGCATACCGACAGTTATGC TGCAACACCTGACATGTTGGAATGGTGTTACTTTGTCCTAATCGTATCCATACCCCTAGTACTGACAATGCATAACTGTGTCACACCGCGGTAAT ATAACTGGGTCGCGCGAAAGGCCAATAGCCTTCCATCAACTCACGGCATGATTACGCCCCTAACACTATGCCCGAAGTCTTATGACACAAAGTAG CCGTACATACCTGTGTACCTCGGGCGATCACATTCCTTGGGTCGCGACCCTATATTCGCCAGACCTGTAACAAGCAAAAGCGAGGCTCATATAAC TACGTCACAATCTGGCCCATGGTGCTCGACTAGAAGTAGGATGAAAAATAGGTCAGAGGATGAAAACAGTCTATCGAGACGACTATGCTATAGCT CTGTGCAAATGCCATGCTTGAAGACAGGTGAGGTAGTTCAGATAAGTAGGGGCCAACAAATTATCTGGAGTCGTATCGCCGAGTGATCGCGATGA TTTCGAATGCAAGTCTGCAGCGAATCTAGGGCTAGCCGCCCCCTAATCTCTCCCGATACGGATGCGATAGACTGTCATACATCCTGTGCACTGGT CCACACTTTCTATCAGGTCGCGATCACTGTACTTTCTCAATCGTCGAATGGTCGCTGGGTGGCAGCTCAGGTTATCACACCGCGCACTCCGTTTC AGATTACAAGTTTACTAAATACGATACGGATATTCCATCGCGAAATCCATCCCGAGGCCTTACGCGATAACCTACGGGGCCCGAGCGCCTCTCAA TTGGTCACCCGCCCACTCTGAAATTGTGAACTTGATCCGTAACGTTTCTGTTTCACTGGTGGGCTACAGCTTATGTCTTATGCGAAGTTTGTACC GGTAGACAGAAGGTTCGGTGTATATCGGTCAGCCTGGCTCACCCCACCATTCCGAGGTGCAGTTACCGCCTGCTGATATTGGCCTCGAGTTTTTA GTCCGGCTTTCGACGATCCCGGTAGCCACCGTGCCTCACAAATCTGATGCGAGAAACATGTCGCCAGGTCGCGCTGCCAAGGAGGAGAGGATCAT GAGCAGCCAGATCTGGGGTTCCGTTCTTATAAAGCAAGCCATGTTGAGATTAACGACTCTTAAGATTTCGATGTGGTAGCACGACCATAGCACTA TCCTGACATCGTGCTTAGTGTCAAATCGGCCCACTACCCGTCGAGGTCTTGGCTCTAGGGGGTCACGTTAATAGGGTAACCTAATGGAATAAAGG CTTTCAAGCTCTCTATCGTTGTCTGGCTGAGACTTATCGGCTGTGCACCCTACCTACTGAGGTGACAAGTTTTCTATCCAGGATTGTCGTGAGTA TTAACGTTTACCCAAACTCTTTGTCTTATAGCCATTAAATTCTATTACGGAACCTAGCACAACCGTGAGTCTTTTCCGGGTAGTTTTTGATGCGC TGGTCCCGAAGGAGGGATCGGAGGTATTACCGTCGCGTACTACCATACCTCAAGGCTCCAGAGGTGATAACACAGGGCAGACGTTCTGTCTTTCT GGCGGGAACCATACGACGTAACTGCATGCCACCCGGAACCATGTAACCGTTGAGTAGGTTCAAACATACGCATTTTGATCACTTATTTCCGCGCA AGATCAGTAGGCATTTAATATCCGTGCTTGGTCTGATCTCAATCAACTAGTTTGAACCTAGAGGCTGTAGCAGTTTACTGGTCCATGGTACTGAG AGTGACAGACAGTACTCAACTTGGCCGCATCGGTGATGCTTTTAAAGTTCTAGAATAGTTTGTTAGGCAAGAGCACAACCAGGTATAAAAGCAGG"
print (DistanceBetweenPatternAndStrings(Pattern, Dna.split(" ")))
        